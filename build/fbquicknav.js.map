{"version":3,"sources":["../src/fbquicknav.js"],"names":["FBQuickNav","selector","options","quicknavEl","document","querySelector","settings","sectionClass","sectionTitle","section_ClassHide","scrollOffset","addTrigger","triggerAfterItems","triggerIconOpen","triggerIconClose","Object","assign","nodesEls","sections","links","titles","init","getSections","buildHTML","clickItemsEvents","scrollActivateItems","triggerEvents","closeOnScroll","hideQuickNav","classList","add","sectionsEl","querySelectorAll","forEach","sectionEl","index","getAttribute","quicknavInEl","createElement","itemsEl","title","itemEl","href","spanEl","textContent","appendChild","buttonEl","type","buttonLabel","buttonIcons","buttonIconOpen","innerHTML","buttonIconClose","insertBefore","firstChild","setTriggerLabel","linkEl","addEventListener","evt","preventDefault","goToSection","ScrollTrigger","create","trigger","start","end","onEnter","onLeave","remove","onEnterBack","onLeaveBack","triggerEl","contains","closeQuicknav","openQuicknav","window","_","throttle","hideHereEl","sectionClassHide","toggleClass","targets","className","endTrigger","triggerLabelEl","y","getBoundingClientRect","top","pageYOffset","scrollTo","behavior"],"mappings":"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","sourcesContent":["/**\n * Quick Nav plugin.\n * Version 2.3.1\n *\n * Required:\n *    - LoDash _.throttle\n *    - GSAP with ScrollTrigger\n *\n * To activate:\n *    new FBQuickNav('.jsQuicknav');\n *    const quickNav = new FBQuickNav('.jsQuicknav');\n *    const quickNav = new FBQuickNav('.jsQuicknav', { options });\n *\n * Settings:\n *    - sectionClass --> Class name of the sections added in the quick nav.\n *    - sectionTitle --> Data attribute for the title of the section, displayed in the quick nav.\n *    - sectionClassHide --> When the quicknav reaches this section, hide it.\n *    - scrollOffset --> Offset when scrolling to a section.\n *    - addTrigger --> Add a button to open and close the quicknav.\n *    - triggerAfterItems --> Position of the trigger HTML: before or after the items.\n *    - triggerIconOpen --> SVG of the icon of the trigger to show the items.\n *    - triggerIconClose --> SVG of the icon of the trigger to hide the items.\n */\n\nclass FBQuickNav {\n  constructor(selector, options) {\n    this.quicknavEl = document.querySelector(selector);\n\n    // Try to init\n    if (this.quicknavEl == null || typeof this.quicknavEl === 'undefined') {\n      return;\n    }\n\n    // Default settings\n    this.settings = {\n      sectionClass: '.jsQuickNav__section',\n      sectionTitle: 'data-quicknav-title',\n      section_ClassHide: '.jsQuickNav__hide',\n      scrollOffset: -100,\n      addTrigger: false,\n      triggerAfterItems: false,\n      triggerIconOpen: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><path d=\"M50 79.53L2.5 32.03l11.56-11.56L50 56.41l35.94-35.94L97.5 32.03z\"/></svg>',\n      triggerIconClose: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><path d=\"M1.004 89.605l88.6-88.6 9.397 9.397-88.6 88.6z\"/><path d=\"M1.004 10.394L10.402.997l88.6 88.6-9.398 9.397z\"/></svg>',\n    };\n\n    // Merge options in the settings\n    this.settings = Object.assign(this.settings, options);\n\n    // Cache HTML nodes, for fast and easy access\n    this.nodesEls = [];\n    this.nodesEls.sections = [];\n    this.nodesEls.links = [];\n    this.nodesEls.titles = [];\n\n    // Init this plugin\n    this.init();\n  }\n\n  init() {\n    this.getSections();\n    this.buildHTML();\n    this.clickItemsEvents();\n    this.scrollActivateItems();\n    this.triggerEvents();\n    this.closeOnScroll();\n    this.hideQuickNav();\n\n    // This init will show the quicknav\n    this.quicknavEl.classList.add('isInit');\n  }\n\n  /**\n   * Get the sections that we will use for the quick nav.\n   * Only the sections that has a title defined.\n   */\n  getSections() {\n    const sectionsEl = document.querySelectorAll(`${this.settings.sectionClass}[${this.settings.sectionTitle}]`);\n\n    sectionsEl.forEach((sectionEl, index) => {\n      // Set section in a var for quick access by index later on.\n      this.nodesEls.sections[index] = sectionEl;\n\n      // Set title in a var for quick access by index later on.\n      const sectionTitle = sectionEl.getAttribute('data-quicknav-title');\n      this.nodesEls.titles[index] = sectionTitle;\n    });\n  }\n\n  /**\n   * Creates the HTML and add it to the DOM.\n   */\n  buildHTML() {\n    /**\n     * WRAP\n     * Wrap everything in a __in div.\n     */\n    const quicknavInEl = document.createElement('div');\n    quicknavInEl.classList.add('quickNav__in');\n\n    /**\n     * ADD ITEMS\n     * Add all the items in the quicknav.\n     */\n    const itemsEl = document.createElement('div');\n    itemsEl.classList.add('quickNav__items', 'jsQuickNav__ctn');\n\n    this.nodesEls.sections.forEach((sectionEl, index) => {\n      const title = sectionEl.getAttribute(this.settings.sectionTitle);\n\n      // <a>\n      const itemEl = document.createElement('a');\n      itemEl.classList.add('quickNav__item');\n      itemEl.href = '#';\n\n      // <span> inside of the <a>\n      const spanEl = document.createElement('span');\n      spanEl.classList.add('quickNav__text');\n      spanEl.textContent = title;\n\n      // Set in this var for quick access by index later on.\n      this.nodesEls.links[index] = itemEl;\n\n      // Add to the items DOM\n      itemEl.appendChild(spanEl);\n      itemsEl.appendChild(itemEl);\n    });\n\n    quicknavInEl.appendChild(itemsEl);\n\n    /**\n     * TRIGGER\n     * Trigger to open / close quicknav\n     */\n    if (this.settings.addTrigger === true) {\n      const buttonEl = document.createElement('button');\n      buttonEl.type = 'button';\n      buttonEl.classList.add('quickNav__trigger', 'jsQuickNav__trigger');\n\n      const buttonLabel = document.createElement('span');\n      buttonLabel.classList.add('quickNav__triggerLabel', 'jsQuickNav__triggerLabel');\n\n      const buttonIcons = document.createElement('span');\n      buttonIcons.classList.add('quickNav__triggerIcon');\n\n      const buttonIconOpen = document.createElement('span');\n      buttonIconOpen.classList.add('svgIcon', 'quickNav__triggerOpen');\n      buttonIconOpen.innerHTML = this.settings.triggerIconOpen;\n\n      const buttonIconClose = document.createElement('span');\n      buttonIconClose.classList.add('svgIcon', 'quickNav__triggerClose');\n      buttonIconClose.innerHTML = this.settings.triggerIconClose;\n\n      buttonIcons.appendChild(buttonIconOpen);\n      buttonIcons.appendChild(buttonIconClose);\n      buttonEl.appendChild(buttonLabel);\n      buttonEl.appendChild(buttonIcons);\n\n      // Before or after the items list\n      if (this.settings.triggerAfterItems) {\n        quicknavInEl.appendChild(buttonEl);\n      } else {\n        quicknavInEl.insertBefore(buttonEl, quicknavInEl.firstChild);\n      }\n    }\n\n    /**\n     * ADD TO DOM\n     * Add all those elements to the quicknav.\n     */\n    this.quicknavEl.appendChild(quicknavInEl);\n\n    /**\n     * DEFAULT LABEL\n     * We show the first section name in the label.\n     */\n    this.setTriggerLabel(0);\n  }\n\n  /**\n   * Click on the quicknav link.\n   * When there's a click, the page scrolls to the chosen section.\n   */\n  clickItemsEvents() {\n    this.nodesEls.links.forEach((linkEl, index) => {\n      linkEl.addEventListener('click', (evt) => {\n        evt.preventDefault();\n\n        this.goToSection(this.nodesEls.sections[index]);\n      });\n    });\n  }\n\n  /**\n   * Automatic activation of the \"active\" class on the items.\n   * When the user scrolls, the active section is highlighted.\n   */\n  scrollActivateItems() {\n    this.nodesEls.sections.forEach((sectionEl, index) => {\n      const linkEl = this.nodesEls.links[index];\n\n      ScrollTrigger.create({\n        trigger: sectionEl,\n\n        // Describes a place on the trigger and a place on the scroller\n        // that must meet in order to start the ScrollTrigger.\n        // Example:\n        // \"top center\" = \"when the top of trigger hits the center of the scroller\"\n        // \"bottom 80%\" = \"when the bottom of trigger hits 80% down from the top of the viewport\"\n        start: 'top center',\n        end: 'bottom center',\n\n        // Gestion custom des events\n        onEnter: () => {\n          linkEl.classList.add('active');\n          this.setTriggerLabel(index);\n        },\n        onLeave: () => {\n          linkEl.classList.remove('active');\n        },\n        onEnterBack: () => {\n          linkEl.classList.add('active');\n          this.setTriggerLabel(index);\n        },\n        onLeaveBack: () => {\n          linkEl.classList.remove('active');\n        },\n\n        // markers: true,\n        // id: \"section \" + sectionIndex,\n      });\n    });\n  }\n\n  /**\n   * Click on the trigger button.\n   * Open and close the quicknav.\n   */\n  triggerEvents() {\n    if (this.settings.addTrigger !== true) { return; }\n\n    const triggerEl = this.quicknavEl.querySelector('.jsQuickNav__trigger');\n    if (!triggerEl) { return; }\n\n    triggerEl.addEventListener('click', (evt) => {\n      evt.preventDefault();\n\n      if (this.quicknavEl.classList.contains('open')) {\n        this.closeQuicknav();\n      } else {\n        this.openQuicknav();\n      }\n    });\n  }\n\n  /**\n   * Close the quicknav on scroll\n   */\n  closeOnScroll() {\n    if (this.settings.addTrigger !== true) { return; }\n\n    window.addEventListener('scroll', _.throttle(() => {\n      if (this.quicknavEl.classList.contains('open')) {\n        this.closeQuicknav();\n      }\n    }, 300));\n  }\n\n  /**\n   * Hide the quicknav\n   * When the window reach a section, hide the quicknav.\n   * Usually, this section is the footer.\n   */\n  hideQuickNav() {\n    const hideHereEl = document.querySelector(this.settings.sectionClassHide);\n    if (!hideHereEl) { return; }\n\n    ScrollTrigger.create({\n      trigger: hideHereEl,\n      toggleClass: { targets: this.quicknavEl, className: 'quickNav--hide' },\n\n      // Describes a place on the trigger and a place on the scroller\n      // that must meet in order to start the ScrollTrigger.\n      // Example:\n      // \"top center\" = \"when the top of the trigger hits the center of the scroller\"\n      // \"bottom 80%\" = \"when the bottom of the trigger hits 80% down from the top of the viewport\"\n      start: 'top 25%',\n\n      // No end ScrollTrigger\n      endTrigger: 'html',\n      end: 'bottom top',\n\n      // markers: true,\n      // id: \"hide quicknav\",\n    });\n  }\n\n  /**\n   * Update the trigger label\n   * Set the name of the active section in the trigger button label.\n   */\n  setTriggerLabel(index) {\n    if (this.settings.addTrigger !== true) { return; }\n\n    // Init the var, so we won't query it each time\n    if (!this.triggerLabelEl) {\n      this.triggerLabelEl = this.quicknavEl.querySelector('.jsQuickNav__triggerLabel');\n    }\n\n    // If the node exists, update it.\n    if (this.triggerLabelEl) {\n      this.triggerLabelEl.textContent = this.nodesEls.titles[index];\n    }\n  }\n\n  /**\n   * Open the quicknav\n   */\n  openQuicknav() {\n    this.quicknavEl.classList.add('open');\n  }\n\n  /**\n   * Close the quicknav\n   */\n  closeQuicknav() {\n    this.quicknavEl.classList.remove('open');\n  }\n\n  /**\n   * Scroll to a specific section\n   */\n  goToSection(sectionEl) {\n    const\n      y = sectionEl.getBoundingClientRect().top\n      + window.pageYOffset\n      + this.settings.scrollOffset;\n\n    window.scrollTo({ top: y, behavior: 'smooth' });\n  }\n}\n"],"file":"fbquicknav.js"}